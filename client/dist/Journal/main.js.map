{"version":3,"sources":["./src/app/submission/submission.component.ts","./src/app/submission/submission.component.html","./src/app/sidebar/sidebar.component.ts","./src/app/sidebar/sidebar.component.html","./src/app/news/news.component.ts","./src/app/news/news.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/submission.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/services/issues.service.ts","./src/app/guards/auth.guard.ts","./src/app/guards/repeat-auth.guard.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/app.module.ts","./src/app/log-in/log-in.component.ts","./src/app/log-in/log-in.component.html","./src/app/sign-up/sign-up.component.ts","./src/app/sign-up/sign-up.component.html","./src/app/services/authentication.service.ts","./src/app/dialog-delete-user/dialog-delete-user.component.ts","./src/app/dialog-delete-user/dialog-delete-user.component.html","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/publish/publish.component.ts","./src/app/publish/publish.component.html","./src/app/issues/issues.component.ts","./src/app/issues/issues.component.html","./src/app/services/image.service.ts","./src/app/angular-material.module.ts","./src/app/guards/sign-up.guard.ts","./src/app/guards/publish.guard.ts","./src/app/app-routing.module.ts","./src/app/interceptors/http-config.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgxMatFileInputComponent } from '@angular-material-components/file-input';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormControl,\r\n  FormControlName,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { FileUploader } from 'ng2-file-upload/file-upload/file-uploader.class';\r\nimport { SubmissionService } from '../services/submission.service';\r\n\r\n@Component({\r\n  selector: 'app-submission',\r\n  templateUrl: './submission.component.html',\r\n  styleUrls: ['./submission.component.scss'],\r\n})\r\nexport class SubmissionComponent implements OnInit {\r\n  constructor(\r\n    public submissionService: SubmissionService,\r\n    private iconRegistry: MatIconRegistry,\r\n    private sanitizer: DomSanitizer,\r\n    private router: Router\r\n  ) {}\r\n\r\n  formGroup: FormGroup;\r\n\r\n  submitSubmissionForm(\r\n    manuscript: File,\r\n    about: File,\r\n    agreement: File,\r\n    anonymous: File\r\n  ): void {\r\n    this.submissionService\r\n      .makeSubmission(manuscript, about, agreement, anonymous)\r\n      .subscribe(\r\n        (_res) => {\r\n          this.router.navigate(['/profile']);\r\n        },\r\n        (err: Error) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.formGroup = new FormGroup({\r\n      manuscriptControl: new FormControl('', [Validators.required]),\r\n      aboutControl: new FormControl('', [Validators.required]),\r\n      agreementControl: new FormControl('', [Validators.required]),\r\n      anonymousControl: new FormControl('', [Validators.required]),\r\n    });\r\n\r\n    this.iconRegistry.addSvgIcon(\r\n      'attach',\r\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/attach.svg')\r\n    );\r\n  }\r\n}\r\n","<div class=\"submission\">\r\n  <div class=\"submission__order\">\r\n    <h1>Order of submissions</h1>\r\n    <p>Materials for publication in the journal are accepted in electronic format via the form below. The editorial\r\n      board fulfills the correspondence only with the author(-s) of the submitted material. Publication in \"Visual\r\n      Theology\" is free of charge for all the authors. The journal doesn't have any Article Processing Charges (APC) and\r\n      any Article Submission Charges (ASC). Authors of publications are not paid any remuneration.</p>\r\n    <p class=\"bold-text\">Terms of Submission:</p>\r\n    <ul>\r\n      <li>the manuscript corresponds to the subject of the journal;</li>\r\n      <li>the manuscript has not been published before (multifold and repeated publication is not allowed);</li>\r\n      <li>the manuscript is not considered for publication in another journal or publisher at the same time;</li>\r\n      <li>the decision to publish is made by all authors (in case of co-authorship);</li>\r\n      <li>the text is the work of authorship, meets the criteria of scientific novelty and academic quality;</li>\r\n      <li>the work is designed in accordance with the \"Requirements for manuscripts\".</li>\r\n    </ul>\r\n    <p class=\"bold-text\">The author presents to the editorial office separate files:</p>\r\n    <ul>\r\n      <li>the manuscript drawn up according to the Requirements;</li>\r\n      <li>information about the author(-s) in Russian and English with the following data: surname, name, patronymic (in\r\n        full); academic degree, academic title; position and place of work / study without abbreviations; e-mail\r\n        address; contact phone number;</li>\r\n      <li>the completed form of the publication agreement signed by the author (in case of co-authorship, each of the\r\n        authors signs a separate form); signing the agreement form, the author thereby permits the open publication of\r\n        his materials, as well as their editing, which does not distort the meaning of the work;</li>\r\n      <li>anonymous file for double-blind peer review (in the text it is required to remove all information about the\r\n        author and the organization in which he works).</li>\r\n    </ul>\r\n    <p class=\"bold-text\">The listed files must be named in the Latin script:</p>\r\n    <ul>\r\n      <li>the manuscript: Surname of author_text.doc (Petrov_text.doc), in the case of co-authorship, the name of the\r\n        first author.</li>\r\n      <li>information about the author(-s): Surname of author_author.doc (Petrov_author.doc).</li>\r\n      <li>the form of the publication agreement: Surname of author_agreement.doc (Petrov_agreement.doc).</li>\r\n      <li>anonymous file: the first word of the title of the work in Latin transcription (e.g. Problema.doc).</li>\r\n    </ul>\r\n    <p>All received materials are <span class=\"bold-text\">checked for plagiarism</span>. If plagiarism is detected, the\r\n      material is rejected without the right to re-submit, and the author himself is included in the list of researchers\r\n      whose materials are not subject to publication in the journal.</p>\r\n    <p><span class=\"bold-text\">The order of publication</span> of materials is determined by the date of their admission\r\n      to the journal. Works devoted to particularly topical issues, as well as containing fundamentally new information,\r\n      can be published out of order by the decision of the editorial board.</p>\r\n    <p>The editorial board does not enter into a meaningful discussion with the authors about articles and opinions of\r\n      reviewers, doesn’t correspond on the methods of writing and design of works and is not engaged in bringing the\r\n      articles to the required research and methodological level.</p>\r\n  </div>\r\n\r\n  <mat-card class=\"submission__container\">\r\n    <mat-card-header class=\"submission__header\">\r\n      <mat-card-title class=\"submission__title\">Make a submission</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"submission__form\" [formGroup]=\"formGroup\"\r\n      (ngSubmit)=\"formGroup.valid && submitSubmissionForm(manuscript.value.files[0], about.value.files[0], agreement.value.files[0], anonymous.value.files[0])\">\r\n      <mat-card-content>\r\n        <mat-form-field class=\"submission__form-field\" appearance=\"fill\">\r\n          <mat-label>Manuscript</mat-label>\r\n          <ngx-mat-file-input #manuscript [accept]=\"'.doc'\" formControlName=\"manuscriptControl\"></ngx-mat-file-input>\r\n          <mat-icon class=\"submission__attach-icon\" matSuffix svgIcon=\"attach\" aria-hidden=\"false\"></mat-icon>\r\n          <mat-error *ngIf=\"formGroup.controls.manuscriptControl.hasError('required')\">\r\n            Manuscript is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"submission__form-field\" appearance=\"fill\">\r\n          <mat-label>Information about the author(-s)</mat-label>\r\n          <ngx-mat-file-input #about [accept]=\"'.doc'\" formControlName=\"aboutControl\"></ngx-mat-file-input>\r\n          <mat-icon class=\"submission__attach-icon\" matSuffix svgIcon=\"attach\" aria-hidden=\"false\"></mat-icon>\r\n          <mat-error *ngIf=\"formGroup.controls.aboutControl.hasError('required')\">\r\n            Information about the author(-s) is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"submission__form-field\" appearance=\"fill\">\r\n          <mat-label>Publication agreement</mat-label>\r\n          <ngx-mat-file-input #agreement [accept]=\"'.doc'\" formControlName=\"agreementControl\"></ngx-mat-file-input>\r\n          <mat-icon class=\"submission__attach-icon\" matSuffix svgIcon=\"attach\" aria-hidden=\"false\"></mat-icon>\r\n          <mat-error *ngIf=\"formGroup.controls.agreementControl.hasError('required')\">\r\n            Publication agreement is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"submission__form-field\" appearance=\"fill\">\r\n          <mat-label>Anonymous file for double-blind peer review</mat-label>\r\n          <ngx-mat-file-input #anonymous [accept]=\"'.doc'\" formControlName=\"anonymousControl\"></ngx-mat-file-input>\r\n          <mat-icon class=\"submission__attach-icon\" matSuffix svgIcon=\"attach\" aria-hidden=\"false\"></mat-icon>\r\n          <mat-error *ngIf=\"formGroup.controls.anonymousControl.hasError('required')\">\r\n            Anonymous file for double-blind peer review is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <button mat-stroked-button class=\"submission__submit-button\" color=\"primary\" type=\"submit\">\r\n        Make a submission\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { User } from '../types/User';\r\n\r\n@Component({\r\n  selector: 'app-sidebar',\r\n  templateUrl: './sidebar.component.html',\r\n  styleUrls: ['./sidebar.component.scss'],\r\n})\r\nexport class SidebarComponent implements OnInit {\r\n  constructor(private router: Router) {}\r\n\r\n  isShown: boolean;\r\n\r\n  ngOnInit(): void {\r\n    this.router.events.subscribe((route) => {\r\n      if (route instanceof NavigationEnd) {\r\n        if (route.url === '/sign-up' || route.url === '/log-in') {\r\n          this.isShown = false;\r\n        } else {\r\n          this.isShown = true;\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"sidebar\" *ngIf=\"isShown\">\r\n  <div>\r\n    <p class=\"bold-text\">ISSN 2713-1610 (Print)</p>\r\n    <p class=\"bold-text\">ISSN 2713-1955 (Online)</p>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-news',\r\n  templateUrl: './news.component.html',\r\n  styleUrls: ['./news.component.scss']\r\n})\r\nexport class NewsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>news will be here</p>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.scss'],\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"home\">\r\n  <article>\r\n    <h1>Dear colleagues!</h1>\r\n    <p>\r\n      <span class=\"bold-text italic-text\">Journal of Visual Theology</span> provides a forum for the expression of\r\n      independent and critical reflection on matters of current academic interest in iconology, hierotopy, ars sacra and\r\n      religious imagery, as well as on visual aspects of the beliefs, practices and theological discourse of past and\r\n      present.\r\n    </p>\r\n    <p>\r\n      The journal was founded in 2019 by Yaroslav-the-Wise Novgorod State University and registered with the Federal\r\n      Service for the Supervision of Communications, Information Technology, and Mass Media, The mass media registration\r\n      certificate ПИ № ФС 77 - 75774 от 23.05.2019.\r\n    </p>\r\n    <p>\r\n      <span class=\"bold-text\">Publication frequency</span> - 2 issues per year.\r\n    </p>\r\n    <p>\r\n      Materials on the following <span class=\"bold-text\">topics</span> are accepted for publication in the journal (this\r\n      list is not exhaustive and can be expanded):\r\n    </p>\r\n    <ul>\r\n      <li>visual aspects of religious faith and theological doctrine</li>\r\n      <li>Christian theology and religious philosophy of image</li>\r\n      <li>theory of sign and sign communication in religion</li>\r\n      <li>semiotics of sacred space (semantics, syntax, pragmatics), construction of sacred spaces (hierotopy)</li>\r\n      <li>symbolism, semiotics and hermeneutics of religious practices: liturgy, ascetics, mysticism, sacramentology\r\n      </li>\r\n      <li>visual (non-verbal) languages of religious experience</li>\r\n      <li>visual aspects of religious consciousness</li>\r\n      <li>visual axiology of Christianity: analysis of the experience of the visual expression of norms and values in\r\n        religious culture, of visual environment as a sphere of normative theological didactics, of the visual field of\r\n        religious practice as a communicative axiology</li>\r\n      <li>visual anthropology of Christianity, including the confessional, cultural and philosophical aspects of the\r\n        presentation of religious identity</li>\r\n      <li>visual theology and the humanities (aesthetics, history, archaeology, cultural studies, philology, geography,\r\n        ethnology, sociology, ethics, art studies)</li>\r\n      <li>semiotics and the aesthetics of the icon</li>\r\n      <li>semiotics and the aesthetics of temple architecture</li>\r\n      <li>sacred topography</li>\r\n      <li>forms of visualization of religious morality</li>\r\n      <li>methods and principles of the illustration of theological text</li>\r\n      <li>visual metaphor and ekphrasis in religious text</li>\r\n      <li>theatrical and cinematic forms of presentation of Christianity</li>\r\n      <li>visual semiotics of religious holidays</li>\r\n      <li>visual theology of everyday life</li>\r\n      <li>theological hermeneutics of lived environment</li>\r\n      <li>sacred urban studies</li>\r\n      <li>methods of theological interpretation of the world as a work of art and visual text</li>\r\n      <li>figurative techniques in verbal theological discourse</li>\r\n      <li>theology of the verbal image</li>\r\n      <li>semiotic analysis of religious imagery on coats of arms, seals, emblems, military banners, and banknotes</li>\r\n      <li>visual aspects of religious pedagogy</li>\r\n    </ul>\r\n    <p>\r\n      The journal accepts materials written in the following <span class=\"bold-text\">formats</span>: article, article\r\n      translations, essay, interview, research report, review, bibliographic review, scientific event report. It is also\r\n      possible to publish materials presented in other formats.\r\n    </p>\r\n    <p>\r\n      The journal <span class=\"bold-text\">languages</span> are Russian, English, German and French.\r\n    </p>\r\n    <p>\r\n      All materials are double-blind peer-reviewed.\r\n    </p>\r\n    <p>\r\n      All articles of the journal are assigned <span class=\"bold-text\">DOI</span>s (Digital Object Identifiers), which\r\n      greatly facilitates the processes of citation, searching and the localization of scientific publications.\r\n    </p>\r\n    <p>\r\n      The <span class=\"italic-text\">Journal of Visual Theology</span> is <span class=\"bold-text\">indexed</span> in the\r\n      Russian Science Citation Index (RSCI), EBSCO and Ulrich’s Periodicals Directory. In addition, issues of the\r\n      journal are available in Academia.edu and CyberLeninka.ru.\r\n    </p>\r\n  </article>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  username: 'Work',\r\n  password: 'hns4kwy58is89LK',\r\n  dbname: 'journal',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { Review, SubFile, Submission } from '../types/Submission';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SubmissionService {\r\n  constructor(private httpClient: HttpClient) {}\r\n\r\n  private url = 'http://localhost:3000/api/file';\r\n\r\n  makeSubmission(\r\n    manuscript: File,\r\n    about: File,\r\n    agreement: File,\r\n    anonymous: File\r\n  ): Observable<void> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('manuscript', manuscript);\r\n    formData.append('about', about);\r\n    formData.append('agreement', agreement);\r\n    formData.append('anonymous', anonymous);\r\n\r\n    return this.httpClient.post<void>(`${this.url}/submission`, formData).pipe(\r\n      catchError((err) => {\r\n        throw new Error(JSON.stringify(err));\r\n      })\r\n    );\r\n  }\r\n\r\n  getSubmissions(): Observable<Submission[]> {\r\n    return this.httpClient\r\n      .get<Submission[]>(`${this.url}/user-submissions`)\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  getSubmissionsForReview(): Observable<Submission[]> {\r\n    return this.httpClient\r\n      .get<Submission[]>(`${this.url}/reviewer-submissions`)\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  getSubmissionsForEditing(): Observable<Submission[]> {\r\n    return this.httpClient\r\n      .get<Submission[]>(`${this.url}/editor-submissions`)\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  getSubmissionsForPublishing(): Observable<Submission[]> {\r\n    return this.httpClient\r\n      .get<Submission[]>(`${this.url}/publisher-submissions`)\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  downloadFile(subFile: SubFile): Observable<ArrayBuffer> {\r\n    const params = new HttpParams()\r\n      .set('submission', subFile.submission.toString())\r\n      .set('name', subFile.name);\r\n\r\n    return this.httpClient\r\n      .get<ArrayBuffer>(`${this.url}/download`, {\r\n        params,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  reviewSubmission(review: Review): Observable<Submission> {\r\n    return this.httpClient\r\n      .patch<Submission>(`${this.url}/review`, {\r\n        ...review,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  scheduleSubmission(id: string, reverse: boolean): Observable<Submission> {\r\n    return this.httpClient\r\n      .patch<Submission>(`${this.url}/schedule`, {\r\n        id,\r\n        reverse,\r\n      })\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './services/authentication.service';\r\nimport { User } from './types/User';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n})\r\nexport class AppComponent {\r\n  title = 'Journal';\r\n}\r\n","<app-header></app-header>\r\n<div class=\"container\" fxLayout fxLayoutAlign=\"space-between\">\r\n  <div fxFlex=\"1 1 auto\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n  <app-sidebar fxLayoutAlign=\"stretch\"></app-sidebar>\r\n</div>\r\n<app-footer></app-footer>","import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { IssueReq, IssueRes } from '../types/Issue';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IssuesService {\n  constructor(private httpClient: HttpClient) {}\n\n  private url = 'http://localhost:3000/api/issue';\n\n  publishIssue(issue: IssueReq): Observable<IssueRes> {\n    return this.httpClient.post<IssueRes>(`${this.url}/publish`, issue).pipe(\n      tap((x) => {\n        const formData: FormData = new FormData();\n        formData.append('cover', issue.cover);\n        const params = new HttpParams().set('id', x._id);\n\n        this.httpClient\n          .patch<void>(`${this.url}/cover`, formData, { params })\n          .pipe(\n            catchError((err) => {\n              throw new Error(JSON.stringify(err));\n            })\n          )\n          .subscribe();\n      }),\n      catchError((err) => {\n        throw new Error(JSON.stringify(err));\n      })\n    );\n  }\n\n  getIssues(): Observable<IssueRes[]> {\n    return this.httpClient.get<IssueRes[]>(`${this.url}/issues`).pipe(\n      catchError((err) => {\n        throw new Error(JSON.stringify(err));\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n  Router,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { UserReqRes } from '../types/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(\r\n    _route: ActivatedRouteSnapshot,\r\n    _state: RouterStateSnapshot\r\n  ): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      this.authenticationService.getCurrent().subscribe(\r\n        (res: UserReqRes | undefined) => {\r\n          if (res) {\r\n            return resolve(true);\r\n          }\r\n\r\n          this.router.navigate(['log-in']);\r\n          return resolve(false);\r\n        },\r\n        (_err: Error) => {\r\n          this.router.navigate(['log-in']);\r\n          return resolve(false);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { User } from '../types/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RepeatAuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(\r\n    _route: ActivatedRouteSnapshot,\r\n    _state: RouterStateSnapshot\r\n  ): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      this.authenticationService.user.subscribe(\r\n        (res: User | undefined) => {\r\n          if (res) {\r\n            this.router.navigate(['home']);\r\n            return resolve(false);\r\n          }\r\n\r\n          return resolve(true);\r\n        },\r\n        (_err: Error) => {\r\n          return resolve(true);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit, SecurityContext } from '@angular/core';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { SubmissionService } from '../services/submission.service';\r\nimport { SubFile, Submission } from '../types/Submission';\r\nimport { User } from '../types/User';\r\nimport * as FileSaver from 'file-saver';\r\nimport { MatIconRegistry } from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { ImageService } from '../services/image.service';\r\nimport { Res } from '../types/Res';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { DialogDeleteUserComponent } from '../dialog-delete-user/dialog-delete-user.component';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss'],\r\n})\r\nexport class ProfileComponent implements OnInit {\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private submissionService: SubmissionService,\r\n    private imageService: ImageService,\r\n    private iconRegistry: MatIconRegistry,\r\n    private sanitizer: DomSanitizer,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  user: User | undefined;\r\n  image: string;\r\n  submissions: Submission[];\r\n  submissionsForReview: Submission[];\r\n  submissionsForEditing: Submission[];\r\n\r\n  downloadSubmissionFile(subFile: SubFile): void {\r\n    this.submissionService.downloadFile(subFile).subscribe(\r\n      (res: ArrayBuffer) => {\r\n        const blob = new Blob([res], { type: 'text/plain;charset=utf-8' });\r\n        FileSaver.saveAs(blob, subFile.name);\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  reviewSubmission(id: string, status: string): void {\r\n    this.submissionService.reviewSubmission({ id, status }).subscribe(\r\n      (res: Submission) => {\r\n        this.submissionsForReview = [\r\n          ...this.submissionsForReview.filter(\r\n            (_value, index) =>\r\n              index <\r\n              this.submissionsForReview.map((value) => value.id).indexOf(res.id)\r\n          ),\r\n          res,\r\n          ...this.submissionsForReview.filter(\r\n            (_value, index) =>\r\n              index >\r\n              this.submissionsForReview.map((value) => value.id).indexOf(res.id)\r\n          ),\r\n        ];\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  scheduleSubmission(id: string, reverse: boolean): void {\r\n    this.submissionService.scheduleSubmission(id, reverse).subscribe(\r\n      (res: Submission) => {\r\n        this.submissionsForEditing = [\r\n          ...this.submissionsForEditing.filter(\r\n            (_value, index) =>\r\n              index <\r\n              this.submissionsForEditing\r\n                .map((value) => value.id)\r\n                .indexOf(res.id)\r\n          ),\r\n          res,\r\n          ...this.submissionsForEditing.filter(\r\n            (_value, index) =>\r\n              index >\r\n              this.submissionsForEditing\r\n                .map((value) => value.id)\r\n                .indexOf(res.id)\r\n          ),\r\n        ];\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  uploadImage(image: File): void {\r\n    this.imageService.uploadImage(image).subscribe(\r\n      (_res) => {\r\n        this.downloadImage();\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  downloadImage(): void {\r\n    this.imageService.downloadImage().subscribe(\r\n      (res: Res) => {\r\n        const base64String = btoa(\r\n          new Uint8Array(res.data).reduce(\r\n            (data, byte) => data + String.fromCharCode(byte),\r\n            ''\r\n          )\r\n        );\r\n        this.image = this.sanitizer.sanitize(\r\n          SecurityContext.RESOURCE_URL,\r\n          this.sanitizer.bypassSecurityTrustResourceUrl(\r\n            `data:image/jpeg;base64,${base64String}`\r\n          )\r\n        );\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  deleteImage(): void {\r\n    this.imageService.deleteImage().subscribe(\r\n      (_res) => {\r\n        this.downloadImage();\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  openDialog(): void {\r\n    this.dialog.open(DialogDeleteUserComponent);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authenticationService.user.subscribe((user: User | undefined) => {\r\n      this.user = user;\r\n\r\n      if (user) {\r\n        if (user.role === 'reviewer') {\r\n          this.submissionService\r\n            .getSubmissionsForReview()\r\n            .subscribe((res: Submission[]) => {\r\n              this.submissionsForReview = res.reverse();\r\n            });\r\n        }\r\n\r\n        if (user.role === 'editor') {\r\n          this.submissionService\r\n            .getSubmissionsForEditing()\r\n            .subscribe((res: Submission[]) => {\r\n              this.submissionsForEditing = res;\r\n            });\r\n        }\r\n      }\r\n    });\r\n\r\n    this.downloadImage();\r\n\r\n    this.submissionService.getSubmissions().subscribe((res: Submission[]) => {\r\n      this.submissions = res.reverse();\r\n    });\r\n\r\n    this.iconRegistry.addSvgIcon(\r\n      'download',\r\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/download.svg')\r\n    );\r\n    this.iconRegistry.addSvgIcon(\r\n      'edit',\r\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/edit.svg')\r\n    );\r\n    this.iconRegistry.addSvgIcon(\r\n      'delete',\r\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/delete.svg')\r\n    );\r\n    this.iconRegistry.addSvgIcon(\r\n      'tick',\r\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/tick.svg')\r\n    );\r\n  }\r\n}\r\n","<div class=\"profile\">\r\n\r\n  <div class=\"profile__title\">\r\n\r\n    <div class=\"profile__image\" [style.background-image]=\"'url(' + image + ')'\">\r\n      <input hidden id=\"edit\" type=\"file\" accept=\".png,.jpg,.jpeg\" (change)=\"uploadImage($event.target.files[0])\" />\r\n      <label for=\"edit\">\r\n        <mat-icon class=\"profile__image-button\" svgIcon=\"edit\"></mat-icon>\r\n      </label>\r\n      <mat-icon class=\"profile__image-button\" svgIcon=\"delete\" (click)=\"deleteImage()\"></mat-icon>\r\n    </div>\r\n\r\n    <h1 class=\"profile__title-name\">{{user?.username}}</h1>\r\n\r\n  </div>\r\n\r\n  <h2>My submissions</h2>\r\n\r\n  <div class=\"profile__submission-block\">\r\n    <mat-card class=\"profile__submission-container\" *ngFor=\"let submission of submissions\">\r\n\r\n      <mat-card-header class=\"profile__submission-header\">\r\n        <mat-card-title class=\"profile__submission-title\">Submission #{{submission.number}}</mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content class=\"profile__submission-content\">\r\n\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Manuscript</span>\r\n          <span>\r\n            {{submission.manuscript}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.manuscript})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Information about the author(-s)</span>\r\n          <span>\r\n            {{submission.about}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.about})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Publication agreement</span>\r\n          <span>\r\n            {{submission.agreement}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.agreement})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Anonymous file for double-blind peer review</span>\r\n          <span>\r\n            {{submission.anonymous}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.anonymous})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n\r\n        <hr class=\"profile__submission-divider\">\r\n\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Status</span>\r\n          <span>{{submission.status}}</span>\r\n        </p>\r\n\r\n      </mat-card-content>\r\n\r\n    </mat-card>\r\n\r\n    <p *ngIf=\"!submissions\">\r\n      There's no submissions for now\r\n    </p>\r\n  </div>\r\n\r\n  <h2 *ngIf=\"user.role === 'reviewer'\">Submissions for review</h2>\r\n\r\n  <div class=\"profile__submission-block\" *ngIf=\"user.role === 'reviewer'\">\r\n    <mat-card class=\"profile__submission-container\" *ngFor=\"let submission of submissionsForReview\">\r\n\r\n      <mat-card-header class=\"profile__submission-header\">\r\n        <mat-card-title class=\"profile__submission-title\">Submission #{{submission.number}}</mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content class=\"profile__submission-content\">\r\n\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Anonymous file for double-blind peer review</span>\r\n          <span>\r\n            {{submission.anonymous}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.anonymous})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n\r\n        <hr class=\"profile__submission-divider\">\r\n\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Status</span>\r\n          <span>{{submission.status}}</span>\r\n        </p>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions class=\"profile__submission-actions\">\r\n        <button mat-flat-button color=\"primary\" (click)=\"reviewSubmission(submission.id, 'accepted')\"\r\n          [disabled]=\"submission.status !== 'under consideration'\">Accept</button>\r\n        <button mat-stroked-button color=\"warn\" (click)=\"reviewSubmission(submission.id, 'rejected')\"\r\n          [disabled]=\"submission.status !== 'under consideration'\">Reject</button>\r\n      </mat-card-actions>\r\n\r\n    </mat-card>\r\n\r\n    <p *ngIf=\"!submissionsForReview\">\r\n      There's no submissions for now\r\n    </p>\r\n  </div>\r\n\r\n  <h2 *ngIf=\"user.role === 'editor'\">Submissions for editing</h2>\r\n\r\n  <div class=\"profile__submission-block\" *ngIf=\"user.role === 'editor'\">\r\n    <mat-card class=\"profile__submission-container\" *ngFor=\"let submission of submissionsForEditing\">\r\n\r\n      <mat-card-header class=\"profile__submission-header\">\r\n        <mat-card-title class=\"profile__submission-title\">Submission #{{submission.number}}</mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content class=\"profile__submission-content\">\r\n\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Manuscript</span>\r\n          <span>\r\n            {{submission.manuscript}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.manuscript})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Information about the author(-s)</span>\r\n          <span>\r\n            {{submission.about}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.about})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Publication agreement</span>\r\n          <span>\r\n            {{submission.agreement}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.agreement})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n        <p>\r\n          <span class=\"profile__submission-name bold-text\">Anonymous file for double-blind peer review</span>\r\n          <span>\r\n            {{submission.anonymous}}\r\n            <mat-icon class=\"profile__submission-download\" svgIcon=\"download\"\r\n              (click)=\"downloadSubmissionFile({ submission: submission.number, name: submission.anonymous})\">\r\n            </mat-icon>\r\n          </span>\r\n        </p>\r\n\r\n      </mat-card-content>\r\n\r\n      <mat-card-actions class=\"profile__submission-actions\">\r\n        <button class=\"{{submission.status === 'scheduled' ? 'profile__scheduled-button' : ''}}\" mat-flat-button\r\n          color=\"primary\" (click)=\"scheduleSubmission(submission.id, submission.status === 'scheduled' ? true : false)\">\r\n          <span class=\"profile__scheduled-button-content\" *ngIf=\"submission.status === 'scheduled'\">\r\n            <mat-icon class=\"profile__scheduled-icon\" svgIcon=\"tick\"></mat-icon>\r\n            <span>Scheduled</span>\r\n          </span>\r\n          <span *ngIf=\"submission.status === 'accepted'\">\r\n            Schedule for the next issue\r\n          </span>\r\n        </button>\r\n      </mat-card-actions>\r\n\r\n    </mat-card>\r\n\r\n    <p *ngIf=\"!submissionsForEditing\">\r\n      There's no submissions for now\r\n    </p>\r\n  </div>\r\n\r\n  <button class=\"profile__action-button\" mat-flat-button color=\"primary\" routerLink=\"/submission\">Make a\r\n    submission</button>\r\n  <button class=\"profile__action-button\" mat-flat-button color=\"primary\" routerLink=\"/publish\"\r\n    *ngIf=\"user && user.role === 'editor'\">Publish the next issue</button>\r\n  <button class=\"profile__action-button\" mat-flat-button color=\"primary\" routerLink=\"/sign-up\"\r\n    *ngIf=\"user && user.role === 'admin'\">Add user</button>\r\n  <button class=\"profile__action-button\" mat-flat-button color=\"warn\" (click)=\"openDialog()\">Delete my account</button>\r\n\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AngularMaterialModule } from './angular-material.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { LogInComponent } from './log-in/log-in.component';\r\nimport { HttpConfigInterceptor } from './interceptors/http-config.interceptor';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { IssuesComponent } from './issues/issues.component';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { SubmissionComponent } from './submission/submission.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { DialogDeleteUserComponent } from './dialog-delete-user/dialog-delete-user.component';\nimport { PublishComponent } from './publish/publish.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    SignUpComponent,\r\n    LogInComponent,\r\n    HeaderComponent,\r\n    HomeComponent,\r\n    SidebarComponent,\r\n    IssuesComponent,\r\n    FooterComponent,\r\n    SubmissionComponent,\r\n    ProfileComponent,\r\n    NewsComponent,\r\n    DialogDeleteUserComponent,\r\n    PublishComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    AngularMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    FlexLayoutModule,\r\n    MatInputModule,\r\n    MaterialFileInputModule,\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpConfigInterceptor,\r\n      multi: true,\r\n    },\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n})\r\nexport class AppModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { User, UserReqRes } from '../types/User';\r\n\r\n@Component({\r\n  selector: 'app-log-in',\r\n  templateUrl: './log-in.component.html',\r\n  styleUrls: ['./log-in.component.scss'],\r\n})\r\nexport class LogInComponent implements OnInit {\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  dataIsIncorrect: boolean;\r\n  passwordIsHidden: boolean;\r\n  formGroup: FormGroup;\r\n\r\n  switchPasswordHiding(): void {\r\n    this.passwordIsHidden = !this.passwordIsHidden;\r\n  }\r\n\r\n  submitLogInForm(): void {\r\n    const username = this.formGroup.get('usernameControl').value;\r\n    const password = this.formGroup.get('passwordControl').value;\r\n\r\n    this.authenticationService\r\n      .logIn({\r\n        username,\r\n        password,\r\n      })\r\n      .subscribe(\r\n        (res: UserReqRes) => {\r\n          this.dataIsIncorrect = false;\r\n          this.router.navigate(['home']);\r\n        },\r\n        (err: Error) => {\r\n          this.dataIsIncorrect = true;\r\n          console.log(err);\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataIsIncorrect = false;\r\n    this.passwordIsHidden = true;\r\n    this.formGroup = new FormGroup({\r\n      usernameControl: new FormControl('', [Validators.required]),\r\n      passwordControl: new FormControl('', [Validators.required]),\r\n    });\r\n  }\r\n}\r\n","<div class=\"log-in\">\r\n  <mat-card class=\"log-in__container\">\r\n    <mat-card-header class=\"log-in__header\">\r\n      <mat-card-title class=\"log-in__title\">Log in</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"log-in__form\" [formGroup]=\"formGroup\" (ngSubmit)=\"\r\n        formGroup.valid && submitLogInForm()\r\n      \">\r\n      <mat-card-content>\r\n        <mat-form-field class=\"log-in__form-field\" appearance=\"outline\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput formControlName=\"usernameControl\" name=\"username\" />\r\n          <mat-error *ngIf=\"formGroup.controls.usernameControl.hasError('required')\">\r\n            Username is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <mat-form-field class=\"log-in__form-field\" appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput formControlName=\"passwordControl\" name=\"password\"\r\n            [type]=\"passwordIsHidden ? 'password' : 'text'\" />\r\n          <button mat-icon-button matSuffix type=\"button\" (click)=\"switchPasswordHiding()\">\r\n            <mat-icon>\r\n              {{ passwordIsHidden ? \"visibility_off\" : \"visibility\" }}\r\n            </mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"formGroup.controls.passwordControl.hasError('required')\">\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <p class=\"log-in__incorrect-data-message\" *ngIf=\"dataIsIncorrect\">\r\n          Incorrect username and / or password\r\n        </p>\r\n      </mat-card-content>\r\n\r\n      <button mat-stroked-button class=\"log-in__submit-button\" color=\"primary\" type=\"submit\">\r\n        Log in\r\n      </button>\r\n    </form>\r\n  </mat-card>\r\n\r\n  <div class=\"log-in__sign-up-container\">\r\n    <span class=\"log-in__sign-up-message\">Not a member?</span>\r\n    <a class=\"log-in__sign-up-link\" routerLink=\"/sign-up\">Sign up</a>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  ValidationErrors,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { User, UserReqRes } from '../types/User';\r\n\r\n@Component({\r\n  selector: 'app-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss'],\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  user: User | undefined;\r\n  passwordIsHidden: boolean;\r\n  confirmPasswordIsHidden: boolean;\r\n  formGroup: FormGroup;\r\n  passwordGroup: FormGroup;\r\n  usernameIsUsed: boolean;\r\n\r\n  switchPasswordHiding(): void {\r\n    this.passwordIsHidden = !this.passwordIsHidden;\r\n  }\r\n\r\n  switchConfirmPasswordHiding(): void {\r\n    this.confirmPasswordIsHidden = !this.confirmPasswordIsHidden;\r\n  }\r\n\r\n  passwordsEqualityValidator(): (\r\n    control: AbstractControl\r\n  ) => ValidationErrors | null {\r\n    return (control: AbstractControl): ValidationErrors | null => {\r\n      if (\r\n        control.value.passwordControl !== control.value.confirmPasswordControl\r\n      ) {\r\n        return { notEqual: true };\r\n      }\r\n\r\n      return null;\r\n    };\r\n  }\r\n\r\n  submitSignUpForm(): void {\r\n    const username = this.formGroup.get('usernameControl').value;\r\n    const password = this.formGroup.get('passwordGroup').get('passwordControl')\r\n      .value;\r\n    const confirmPassword = this.formGroup\r\n      .get('passwordGroup')\r\n      .get('confirmPasswordControl').value;\r\n    const role = this.formGroup.get('roleControl').value;\r\n\r\n    this.authenticationService\r\n      .signUp({\r\n        username,\r\n        password,\r\n        confirmPassword,\r\n        role,\r\n      })\r\n      .subscribe(\r\n        (_res: UserReqRes) => {\r\n          this.usernameIsUsed = false;\r\n          this.router.navigate(['log-in']);\r\n        },\r\n        (err: Error) => {\r\n          if (JSON.parse(err.message).username === 'is already used') {\r\n            this.usernameIsUsed = true;\r\n          }\r\n        }\r\n      );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authenticationService.user.subscribe((user: User | undefined) => {\r\n      this.user = user;\r\n    });\r\n\r\n    this.passwordIsHidden = true;\r\n    this.confirmPasswordIsHidden = true;\r\n    this.formGroup = new FormGroup({\r\n      usernameControl: new FormControl('', [Validators.required]),\r\n      passwordGroup: new FormGroup({\r\n        passwordControl: new FormControl('', [Validators.required]),\r\n        confirmPasswordControl: new FormControl('', [Validators.required]),\r\n      }),\r\n      roleControl: new FormControl('user', [Validators.required]),\r\n    });\r\n    this.passwordGroup = this.formGroup.get('passwordGroup') as FormGroup;\r\n    this.passwordGroup.setValidators(this.passwordsEqualityValidator());\r\n    this.usernameIsUsed = false;\r\n  }\r\n}\r\n","<div class=\"sign-up\">\r\n\r\n  <mat-card class=\"sign-up__container\">\r\n\r\n    <mat-card-header class=\"sign-up__header\">\r\n      <mat-card-title class=\"sign-up__title\">Sign up</mat-card-title>\r\n    </mat-card-header>\r\n\r\n    <form class=\"sign-up__form\" [formGroup]=\"formGroup\" (ngSubmit)=\"formGroup.valid && submitSignUpForm()\">\r\n\r\n      <mat-card-content>\r\n        <mat-form-field class=\"sign-up__form-field\" appearance=\"outline\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput formControlName=\"usernameControl\" name=\"username\" />\r\n          <mat-error *ngIf=\"formGroup.controls.usernameControl.hasError('required')\">\r\n            Username is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n\r\n        <fieldset class=\"sign-up__form-group\" formGroupName=\"passwordGroup\">\r\n          <mat-form-field class=\"sign-up__form-field\" appearance=\"outline\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput formControlName=\"passwordControl\" name=\"password\"\r\n              [type]=\"passwordIsHidden ? 'password' : 'text'\" />\r\n            <button mat-icon-button matSuffix type=\"button\" (click)=\"switchPasswordHiding()\">\r\n              <mat-icon>\r\n                {{ passwordIsHidden ? \"visibility_off\" : \"visibility\" }}\r\n              </mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"\r\n                passwordGroup.controls.passwordControl.hasError('required')\r\n              \">\r\n              Password is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-form-field class=\"sign-up__form-field\" appearance=\"outline\">\r\n            <mat-label>Confirm Password</mat-label>\r\n            <input matInput formControlName=\"confirmPasswordControl\" name=\"confirmPassword\"\r\n              [type]=\"confirmPasswordIsHidden ? 'password' : 'text'\" />\r\n            <button mat-icon-button matSuffix type=\"button\" (click)=\"switchConfirmPasswordHiding()\">\r\n              <mat-icon>\r\n                {{ passwordIsHidden ? \"visibility_off\" : \"visibility\" }}\r\n              </mat-icon>\r\n            </button>\r\n            <mat-error *ngIf=\"\r\n                passwordGroup.controls.confirmPasswordControl.hasError(\r\n                  'required'\r\n                )\r\n              \">\r\n              Password confirmation is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n\r\n          <mat-error *ngIf=\"passwordGroup.hasError('notEqual')\">\r\n            Passwords must be equal\r\n          </mat-error>\r\n\r\n          <p class=\"sign-up__used-username-message\" *ngIf=\"usernameIsUsed\">\r\n            Username is already in use\r\n          </p>\r\n        </fieldset>\r\n\r\n        <mat-form-field class=\"sign-up__form-field\" appearance=\"outline\" *ngIf=\"user && user.role === 'admin'\">\r\n          <mat-label>Role</mat-label>\r\n          <mat-select formControlName=\"roleControl\">\r\n            <mat-option value=\"user\">User</mat-option>\r\n            <mat-option value=\"reviewer\">Reviewer</mat-option>\r\n            <mat-option value=\"editor\">Editor</mat-option>\r\n          </mat-select>\r\n          <mat-error *ngIf=\"formGroup.controls.roleControl.hasError('notEqual')\">\r\n            Passwords must be equal\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </mat-card-content>\r\n\r\n      <button mat-stroked-button class=\"sign-up__submit-button\" color=\"primary\" type=\"submit\">\r\n        Sign up\r\n      </button>\r\n\r\n    </form>\r\n\r\n  </mat-card>\r\n\r\n  <div class=\"sign-up__log-in-container\">\r\n    <span class=\"sign-up__log-in-message\">Already have an account?</span>\r\n    <a class=\"sign-up__log-in-link\" routerLink=\"/log-in\">Log in</a>\r\n  </div>\r\n\r\n</div>","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { User, UserReqRes } from '../types/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {\r\n    this.onInit();\r\n  }\r\n\r\n  private url = 'http://localhost:3000/api/user';\r\n  user = new BehaviorSubject<User | undefined>(undefined);\r\n\r\n  onInit(): void {\r\n    this.getCurrent().subscribe(\r\n      (res: UserReqRes) => {\r\n        this.user.next(res.user);\r\n      },\r\n      (_err: Error) => {}\r\n    );\r\n  }\r\n\r\n  signUp(user: User): Observable<UserReqRes> {\r\n    return this.httpClient\r\n      .post<UserReqRes>(`${this.url}/sign-up`, { user })\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  logIn(user: User): Observable<UserReqRes> {\r\n    return this.httpClient\r\n      .post<UserReqRes>(`${this.url}/log-in`, { user })\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        }),\r\n        tap((res: UserReqRes) => {\r\n          localStorage.setItem('journal-token', res.user.token);\r\n          this.user.next(res.user);\r\n        })\r\n      );\r\n  }\r\n\r\n  getCurrent(): Observable<UserReqRes> {\r\n    return this.httpClient.get<UserReqRes>(`${this.url}/current`).pipe(\r\n      catchError((err) => {\r\n        throw new Error(JSON.stringify(err));\r\n      })\r\n    );\r\n  }\r\n\r\n  getName(id: string): Observable<User> {\r\n    const params = new HttpParams().set('id', id);\r\n\r\n    return this.httpClient\r\n      .get<User>(`${this.url}/name`, { params })\r\n      .pipe(\r\n        catchError((err) => {\r\n          throw new Error(JSON.stringify(err));\r\n        })\r\n      );\r\n  }\r\n\r\n  deleteCurrent(): Observable<void> {\r\n    return this.httpClient.delete<void>(`${this.url}/delete`).pipe(\r\n      catchError((err) => {\r\n        throw new Error(JSON.stringify(err));\r\n      })\r\n    );\r\n  }\r\n\r\n  signOut(): void {\r\n    localStorage.removeItem('journal-token');\r\n    this.router.navigate(['/log-in']);\r\n    this.user.next(undefined);\r\n  }\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\n\r\n@Component({\r\n  selector: 'app-dialog-delete-user',\r\n  templateUrl: './dialog-delete-user.component.html',\r\n  styleUrls: ['./dialog-delete-user.component.scss'],\r\n})\r\nexport class DialogDeleteUserComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DialogDeleteUserComponent>,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  deleteUser(): void {\r\n    this.dialogRef.close();\r\n\r\n    this.authenticationService.deleteCurrent().subscribe(\r\n      (_res) => {\r\n        this.authenticationService.signOut();\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"dialog-delete-user\">\r\n  <h1 mat-dialog-title>Delete account</h1>\r\n  <div mat-dialog-content>\r\n    <p>Are you sure you want to delete your account?</p>\r\n    <p>You will permanently lose the account, your profile picture and submissions!</p>\r\n  </div>\r\n  <div class=\"dialog-delete-user__action-block\" mat-dialog-actions>\r\n    <button class=\"dialog-delete-user__button\" mat-stroked-button cdkFocusInitial (click)=\"cancel()\">Cancel</button>\r\n    <button mat-stroked-button color=\"warn\" mat-dialog-close (click)=\"deleteUser()\">Delete</button>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  ICON_REGISTRY_PROVIDER,\r\n  MatIconRegistry,\r\n} from '@angular/material/icon';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { User, UserReqRes } from '../types/User';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss'],\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  constructor(\r\n    private authenticationService: AuthenticationService,\r\n    private iconRegistry: MatIconRegistry,\r\n    private sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  user: User | undefined;\r\n\r\n  signOut(): void {\r\n    this.authenticationService.signOut();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.authenticationService.user.subscribe((user: User | undefined) => {\r\n      this.user = user;\r\n    });\r\n\r\n    this.iconRegistry.addSvgIcon(\r\n      'dropdown',\r\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/dropdown.svg')\r\n    );\r\n  }\r\n}\r\n","<header class=\"header\">\r\n  <div class=\"header__title\">\r\n    <a routerLink=\"/home\">\r\n      <img class=\"header__title-text\" src=\"../../assets/title-eng.png\" alt=\"Journal of Visual Theology title text\">\r\n    </a>\r\n    <img class=\"header__title-logo\" src=\"../../assets/logo.png\" alt=\"Journal of Visual Theology title logo\">\r\n  </div>\r\n\r\n  <mat-toolbar class=\"header__toolbar\">\r\n    <mat-toolbar-row class=\"header__row\">\r\n\r\n      <nav class=\"header__nav\">\r\n        <button class=\"header__link\" mat-button routerLink=\"/home\">Home</button>\r\n        <button class=\"header__link\" mat-button [mat-menu-trigger-for]=\"aboutMenu\">\r\n          <span>About</span>\r\n          <mat-icon class=\"header__dropdown-arrow\" svgIcon=\"dropdown\"></mat-icon>\r\n        </button>\r\n        <button class=\"header__link\" mat-button [mat-menu-trigger-for]=\"editorialTeamMenu\">\r\n          <span>Editorial Team</span>\r\n          <mat-icon class=\"header__dropdown-arrow\" svgIcon=\"dropdown\"></mat-icon>\r\n        </button>\r\n        <button class=\"header__link\" mat-button routerLink=\"/issues\">Issues</button>\r\n        <button class=\"header__link\" mat-button [mat-menu-trigger-for]=\"forAuthorsMenu\">\r\n          <span>For Authors</span>\r\n          <mat-icon class=\"header__dropdown-arrow\" svgIcon=\"dropdown\"></mat-icon>\r\n        </button>\r\n        <button class=\"header__link\" mat-button routerLink=\"/news\">News</button>\r\n      </nav>\r\n\r\n      <button class=\"header__auth-link\" mat-button routerLink=\"/sign-up\" *ngIf=\"!user\">Sign up</button>\r\n      <button class=\"header__auth-link\" mat-button routerLink=\"/log-in\" *ngIf=\"!user\">Log in</button>\r\n\r\n      <button class=\"header__menu-button\" mat-button [matMenuTriggerFor]=\"userMenu\" *ngIf=\"user\">\r\n        <span>{{user.username}}</span>\r\n        <mat-icon class=\"header__dropdown-arrow\" svgIcon=\"dropdown\"></mat-icon>\r\n      </button>\r\n\r\n    </mat-toolbar-row>\r\n  </mat-toolbar>\r\n</header>\r\n\r\n<mat-menu class=\"header__menu-block\" #aboutMenu=\"matMenu\">\r\n  <button mat-menu-item>Aims and Scope</button>\r\n  <button mat-menu-item>Editorial Policy</button>\r\n  <button mat-menu-item>Publication Ethics</button>\r\n  <button mat-menu-item>Peer Review Process</button>\r\n  <button mat-menu-item>Open Access Policy</button>\r\n  <button mat-menu-item>Privacy Statement</button>\r\n  <button mat-menu-item>Plagiarism Policy</button>\r\n  <button mat-menu-item>Documents</button>\r\n</mat-menu>\r\n\r\n<mat-menu class=\"header__menu-block\" #editorialTeamMenu=\"matMenu\">\r\n  <button mat-menu-item>Editorial Board</button>\r\n  <button mat-menu-item>Editorial Council</button>\r\n  <button mat-menu-item>Contacts</button>\r\n</mat-menu>\r\n\r\n<mat-menu class=\"header__menu-block\" #forAuthorsMenu=\"matMenu\">\r\n  <button mat-menu-item>Submissions</button>\r\n  <button mat-menu-item>Author Guidelines</button>\r\n  <button mat-menu-item>Copyright and Licensing</button>\r\n</mat-menu>\r\n\r\n<mat-menu class=\"header__menu-block\" #userMenu=\"matMenu\" xPosition=\"before\">\r\n  <button mat-menu-item routerLink=\"/profile\">Profile</button>\r\n  <button mat-menu-item (click)=\"signOut()\">Sign out</button>\r\n</mat-menu>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer class=\"footer\">\r\n  <div class=\"footer__founder-block\">\r\n    <a href=\"http://www.novsu.ru/\">\r\n      <img class=\"footer__founder-logo\" src=\"../../assets/novsu-logo-full.png\" alt=\"NovSU logo\">\r\n    </a>\r\n    <div>\r\n      <p class=\"footer__header bold-text\">\r\n        Founder, Publisher\r\n      </p>\r\n      <p>Address:<br>173003, Russia, Veliky Novgorod, Bolshaya Sankt-Peterburgskaya Street, 41.<br>Phone: +7 8162\r\n        62-72-44<br>Fax: +7 8162 97-45-26</p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"footer__editorial-office-block\">\r\n    <div>\r\n      <p class=\"footer__header bold-text\">Editorial office</p>\r\n      <p>\r\n        Address:<br>173003, Russia, Veliky Novgorod, Bolshaya Sankt-Peterburgskaya Street, 41, aud. 1216.<br>Phone: +7\r\n        816 233-88-30, +7 903 913-19-91<br>E-mail: vistheo@yandex.ru\r\n      </p>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"footer__age-limit\">16+</div>\r\n</footer>","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatIconRegistry } from '@angular/material/icon';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { IssuesService } from '../services/issues.service';\nimport { SubmissionService } from '../services/submission.service';\nimport { IssueReq, IssueRes } from '../types/Issue';\nimport { Submission, SubAuthor } from '../types/Submission';\nimport { User } from '../types/User';\n\n@Component({\n  selector: 'app-publish',\n  templateUrl: './publish.component.html',\n  styleUrls: ['./publish.component.scss'],\n})\nexport class PublishComponent implements OnInit {\n  constructor(\n    private iconRegistry: MatIconRegistry,\n    private sanitizer: DomSanitizer,\n    private submissionService: SubmissionService,\n    private authenticationService: AuthenticationService,\n    private issueService: IssuesService,\n    private router: Router\n  ) {}\n\n  formGroup: FormGroup;\n  submissionsForPublishing: Submission[];\n  authors: SubAuthor;\n\n  submitPublishForm(): void {\n    const issue: IssueReq = {\n      number: this.formGroup.controls.numberControl.value,\n      year: this.formGroup.controls.yearControl.value,\n      cover: this.formGroup.controls.coverControl.value.files[0],\n      submissions: this.submissionsForPublishing.map((value, index) => ({\n        id: value.id,\n        title: this.formGroup.controls.titleControl.value[index],\n      })),\n    };\n\n    this.issueService.publishIssue(issue).subscribe(\n      (_res: IssueRes) => {\n        this.router.navigate(['/issues']);\n      },\n      (err: Error) => {\n        console.log(err);\n      }\n    );\n  }\n\n  ngOnInit(): void {\n    this.submissionsForPublishing = [];\n    this.authors = {};\n\n    this.formGroup = new FormGroup({\n      numberControl: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d+$/),\n      ]),\n      yearControl: new FormControl('', [\n        Validators.required,\n        Validators.pattern(/^\\d+$/),\n        Validators.min(1900),\n        Validators.max(new Date().getFullYear()),\n      ]),\n      coverControl: new FormControl(''),\n      titleControl: new FormArray([]),\n    });\n\n    this.submissionService\n      .getSubmissionsForPublishing()\n      .subscribe((submissions: Submission[]) => {\n        this.submissionsForPublishing = submissions;\n\n        for (const submission of submissions) {\n          (this.formGroup.controls.titleControl as FormArray).push(\n            new FormControl('', Validators.required)\n          );\n\n          this.authenticationService.getName(submission.user).subscribe(\n            (user: User) => {\n              this.authors = {\n                ...this.authors,\n                [submission.id]: user,\n              };\n            },\n            (err: Error) => {\n              console.log(err);\n            }\n          );\n        }\n      });\n\n    this.iconRegistry.addSvgIcon(\n      'attach',\n      this.sanitizer.bypassSecurityTrustResourceUrl('../../assets/attach.svg')\n    );\n  }\n}\n","<div class=\"publish\">\n\n  <mat-card class=\"publish__container\">\n\n    <mat-card-header class=\"publish__header\">\n      <mat-card-title class=\"publish__title\">Publish</mat-card-title>\n    </mat-card-header>\n\n    <form class=\"publish__form\" [formGroup]=\"formGroup\" (ngSubmit)=\"formGroup.valid && submitPublishForm()\">\n\n      <mat-card-content>\n\n        <div class=\"publish__form-field publish__flex-form-field\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>No</mat-label>\n            <input matInput formControlName=\"numberControl\" />\n            <mat-error *ngIf=\"formGroup.controls.numberControl.hasError('required')\">\n              No is required\n            </mat-error>\n            <mat-error *ngIf=\"formGroup.controls.numberControl.hasError('pattern')\">\n              No must be a number\n            </mat-error>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Year</mat-label>\n            <input matInput formControlName=\"yearControl\" />\n            <mat-error *ngIf=\"formGroup.controls.yearControl.hasError('required')\">\n              Year is required\n            </mat-error>\n            <mat-error *ngIf=\"formGroup.controls.yearControl.hasError('pattern')\">\n              Year must be a number\n            </mat-error>\n            <mat-error *ngIf=\"formGroup.controls.yearControl.hasError('min')\">\n              You can't publish issues dated earlier than 1900\n            </mat-error>\n            <mat-error *ngIf=\"formGroup.controls.yearControl.hasError('max')\">\n              You can't publish future issues\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <mat-form-field class=\"publish__form-field\" appearance=\"fill\">\n          <mat-label>Cover</mat-label>\n          <ngx-mat-file-input [accept]=\"'.png,.jpg,.jpeg'\" formControlName=\"coverControl\"></ngx-mat-file-input>\n          <mat-icon class=\"submission__attach-icon\" matSuffix svgIcon=\"attach\" aria-hidden=\"false\"></mat-icon>\n        </mat-form-field>\n\n        <div formArrayName=\"titleControl\">\n          <div class=\"publish__form-field\" *ngFor=\"let submission of submissionsForPublishing; let i = index\">\n            <mat-form-field appearance=\"outline\">\n              <mat-label>Title</mat-label>\n              <input matInput [formControlName]=\"i\" />\n            </mat-form-field>\n            <span>\n              <span>by </span>\n              <span class=\"bold-text\">{{authors[submission.id]?.username}} </span>\n              <span>(submission <span class=\"bold-text\">#{{submission.number}}</span>) </span>\n            </span>\n          </div>\n        </div>\n\n        <mat-error *ngIf=\"formGroup.controls.titleControl.touched && formGroup.controls.titleControl.invalid\">\n          All titles are required\n        </mat-error>\n\n        <mat-error *ngIf=\"!submissionsForPublishing.length\">\n          You can't publish an empty issue. Please schedule some submissions for publishing.\n        </mat-error>\n\n      </mat-card-content>\n\n      <button mat-stroked-button class=\"publish__submit-button\" color=\"primary\" type=\"submit\"\n        [disabled]=\"!submissionsForPublishing.length\">Publish</button>\n\n    </form>\n\n  </mat-card>\n\n</div>","import { Component, OnInit, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { IssuesService } from '../services/issues.service';\r\nimport { IssueRes } from '../types/Issue';\r\n\r\n@Component({\r\n  selector: 'app-issues',\r\n  templateUrl: './issues.component.html',\r\n  styleUrls: ['./issues.component.scss'],\r\n})\r\nexport class IssuesComponent implements OnInit {\r\n  constructor(\r\n    private issueService: IssuesService,\r\n    private sanitizer: DomSanitizer\r\n  ) {}\r\n\r\n  issues: IssueRes[];\r\n\r\n  ngOnInit(): void {\r\n    this.issueService.getIssues().subscribe(\r\n      (res: IssueRes[]) => {\r\n        for (const issue of res) {\r\n          const base64String = btoa(\r\n            new Uint8Array(issue.cover.data).reduce(\r\n              (data, byte) => data + String.fromCharCode(byte),\r\n              ''\r\n            )\r\n          );\r\n          issue.image = this.sanitizer.sanitize(\r\n            SecurityContext.RESOURCE_URL,\r\n            this.sanitizer.bypassSecurityTrustResourceUrl(\r\n              `data:image/jpeg;base64,${base64String}`\r\n            )\r\n          );\r\n        }\r\n\r\n        this.issues = res;\r\n        console.log(this.issues);\r\n      },\r\n      (err: Error) => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"issues\">\r\n\r\n  <mat-card class=\"issues__container\" *ngFor=\"let issue of issues\">\r\n\r\n    <img class=\"issues__cover\" src={{issue.image}} alt=\"Cover of the issue No {{issue.number}} ({{issue.year}})\">\r\n\r\n    <div>\r\n      <mat-card-header class=\"issues__header\">\r\n        <mat-card-title class=\"issues__title\">No {{issue.number}} ({{issue.year}})</mat-card-title>\r\n      </mat-card-header>\r\n\r\n      <mat-card-content class=\"issues__content\">\r\n        <p *ngFor=\"let submission of issue.submissions\">\r\n          {{submission.title}}\r\n        </p>\r\n      </mat-card-content>\r\n    </div>\r\n\r\n  </mat-card>\r\n\r\n</div>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { Res } from '../types/Res';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ImageService {\r\n  constructor(private httpClient: HttpClient, private router: Router) {}\r\n\r\n  private url = 'http://localhost:3000/api/image';\r\n\r\n  uploadImage(image: File): Observable<void> {\r\n    const formData: FormData = new FormData();\r\n    formData.append('image', image);\r\n\r\n    return this.httpClient.post<void>(`${this.url}/upload`, formData).pipe(\r\n      catchError((err) => {\r\n        throw new Error(JSON.stringify(err));\r\n      })\r\n    );\r\n  }\r\n\r\n  downloadImage(): Observable<Res> {\r\n    return this.httpClient.get<Res>(`${this.url}/download`).pipe(\r\n      catchError((err) => {\r\n        throw new Error(JSON.stringify(err));\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteImage(): Observable<void> {\r\n    return this.httpClient.delete<void>(`${this.url}/delete`).pipe(\r\n      catchError((err) => {\r\n        throw new Error(JSON.stringify(err));\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\n\r\nconst materialModules = [\r\n  CdkTreeModule,\r\n  MatAutocompleteModule,\r\n  MatButtonModule,\r\n  MatCardModule,\r\n  MatCheckboxModule,\r\n  MatChipsModule,\r\n  MatDividerModule,\r\n  MatExpansionModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatProgressSpinnerModule,\r\n  MatPaginatorModule,\r\n  MatRippleModule,\r\n  MatSelectModule,\r\n  MatSidenavModule,\r\n  MatSnackBarModule,\r\n  MatSortModule,\r\n  MatTableModule,\r\n  MatTabsModule,\r\n  MatToolbarModule,\r\n  MatFormFieldModule,\r\n  MatButtonToggleModule,\r\n  MatTreeModule,\r\n  OverlayModule,\r\n  PortalModule,\r\n  MatBadgeModule,\r\n  MatGridListModule,\r\n  MatRadioModule,\r\n  MatDatepickerModule,\r\n  MatTooltipModule,\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, ...materialModules],\r\n  exports: [...materialModules],\r\n})\r\nexport class AngularMaterialModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  Router,\r\n} from '@angular/router';\r\nimport { AuthenticationService } from '../services/authentication.service';\r\nimport { User } from '../types/User';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SignUpGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService\r\n  ) {}\r\n\r\n  canActivate(\r\n    _route: ActivatedRouteSnapshot,\r\n    _state: RouterStateSnapshot\r\n  ): Promise<boolean> {\r\n    return new Promise((resolve, _reject) => {\r\n      this.authenticationService.user.subscribe(\r\n        (res: User | undefined) => {\r\n          if (res && res.role !== 'admin') {\r\n            this.router.navigate(['home']);\r\n            return resolve(false);\r\n          }\r\n\r\n          return resolve(true);\r\n        },\r\n        (_err: Error) => {\r\n          return resolve(true);\r\n        }\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\nimport { User } from '../types/User';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PublishGuard implements CanActivate {\n  constructor(\n    private router: Router,\n    private authenticationService: AuthenticationService\n  ) {}\n\n  canActivate(\n    _route: ActivatedRouteSnapshot,\n    _state: RouterStateSnapshot\n  ): Promise<boolean> {\n    return new Promise((resolve, _reject) => {\n      this.authenticationService.user.subscribe(\n        (res: User | undefined) => {\n          if (res && res.role !== 'editor' && res.role !== 'admin') {\n            this.router.navigate(['profile']);\n            return resolve(false);\n          }\n\n          return resolve(true);\n        },\n        (_err: Error) => {\n          this.router.navigate(['profile']);\n          return resolve(false);\n        }\n      );\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LogInComponent } from './log-in/log-in.component';\r\nimport { SignUpComponent } from './sign-up/sign-up.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { IssuesComponent } from './issues/issues.component';\r\nimport { SubmissionComponent } from './submission/submission.component';\r\nimport { ProfileComponent } from './profile/profile.component';\r\nimport { RepeatAuthGuard } from './guards/repeat-auth.guard';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { SignUpGuard } from './guards/sign-up.guard';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { PublishComponent } from './publish/publish.component';\r\nimport { PublishGuard } from './guards/publish.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\r\n  {\r\n    path: 'sign-up',\r\n    component: SignUpComponent,\r\n    canActivate: [SignUpGuard],\r\n  },\r\n  {\r\n    path: 'log-in',\r\n    component: LogInComponent,\r\n    canActivate: [RepeatAuthGuard],\r\n  },\r\n  { path: 'home', component: HomeComponent },\r\n  { path: 'issues', component: IssuesComponent },\r\n  { path: 'news', component: NewsComponent },\r\n  {\r\n    path: 'submission',\r\n    component: SubmissionComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    canActivate: [AuthGuard],\r\n  },\r\n  {\r\n    path: 'publish',\r\n    component: PublishComponent,\r\n    canActivate: [PublishGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class HttpConfigInterceptor implements HttpInterceptor {\r\n  constructor() {}\r\n\r\n  intercept(\r\n    request: HttpRequest<unknown>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<unknown>> {\r\n    if (\r\n      request.url !== 'http://localhost:3000/api/file/submission' &&\r\n      request.url !== 'http://localhost:3000/api/image/upload' &&\r\n      request.url !== 'http://localhost:3000/api/issue/cover'\r\n    ) {\r\n      request = request.clone({\r\n        headers: request.headers.set('Content-Type', 'application/json'),\r\n      });\r\n    }\r\n\r\n    if (\r\n      request.url !== 'http://localhost:3000/api/user/sign-up' &&\r\n      request.url !== 'http://localhost:3000/api/user/log-in'\r\n    ) {\r\n      request = request.clone({\r\n        headers: request.headers.set(\r\n          'Authorization',\r\n          `Token ${localStorage.getItem('journal-token')}`\r\n        ),\r\n      });\r\n    }\r\n\r\n    if (request.url.startsWith('http://localhost:3000/api/file/download')) {\r\n      request = request.clone({\r\n        responseType: 'arraybuffer',\r\n      });\r\n    }\r\n\r\n    // if (request.url === 'http://localhost:3000/api/image/download') {\r\n    //   request = request.clone({\r\n    //     responseType: 'arraybuffer',\r\n    //   });\r\n    // }\r\n\r\n    return next.handle(request);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic()\r\n  .bootstrapModule(AppModule)\r\n  .catch((err) => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}